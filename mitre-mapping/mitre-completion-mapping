import csv
from collections import defaultdict

# Read TTP Coverages and organize them by search name with details
ttp_coverages = defaultdict(list)
all_ttp_details = []

with open('TTP_Coverages.csv', 'r') as f:
    reader = csv.reader(f)
    next(reader)  # Skip header
    for row in reader:
        search_id = row[0]
        ttp_id = row[1]
        attack_name = row[2]
        description = row[3]
        ttp_coverages[search_id].append((ttp_id, attack_name, description))
        all_ttp_details.append((search_id, ttp_id, attack_name, description))

# Read Alert Status Report
alert_status = defaultdict(lambda: {'SHADOW': False, 'LIVE': False})

with open('AlertStatusReport.csv', 'r') as f:
    reader = csv.reader(f)
    next(reader)  # Skip header
    for row in reader:
        search_name, client_name = row
        alert_status[search_name][client_name] = True

# Prepare the output with details from the first CSV and coverage status from the second CSV
output_data = [['Detection ID', 'MITRE ATT&CK ID', 'Attack Name', 'Description', 'Covered']]

covered_ttps = set()

for search_name, ttp_list in ttp_coverages.items():
    for ttp_id, attack_name, description in ttp_list:
        covered = 'NO'  # Default to 'NO' for uncovered TTPs
        if alert_status[search_name]['SHADOW'] or alert_status[search_name]['LIVE']:
            covered = 'YES'
            covered_ttps.add(ttp_id)
        output_data.append([search_name, ttp_id, attack_name, description, covered])

# Calculate total coverage percentage
unique_ttp_ids = {ttp_id for _, ttp_id, _, _ in all_ttp_details if ttp_id != 'T0000'}  # Exclude 'Unknown' TTPs
coverage_percentage = len(covered_ttps) / len(unique_ttp_ids) * 100

# Add coverage summary
output_data.append([])
output_data.append(['Total TTPs', len(unique_ttp_ids)])
output_data.append(['Covered TTPs', len(covered_ttps)])
output_data.append(['Coverage Percentage', f"{coverage_percentage:.2f}%"])

# Write the output CSV
with open('Detailed_TTP_Coverage_Report.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerows(output_data)

print('Detailed TTP coverage report generated successfully!')
